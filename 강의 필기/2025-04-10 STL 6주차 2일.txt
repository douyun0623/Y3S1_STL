2025-04-10 STL 6주차 2일

이동에 관련된 동작을 정의하지 않아서 복사생성자가 불림
이동이 없으면 아쉽지만
	복사를 이용해서 처리한다.
	이동을 지원하지 않는다면 복사 생성자를 이용( 이동 의미론 이라고 한다.)
									move smentic?




-----------------------------------------------------------------------
STRING s{ "표준 string" };
STRING t = move(s);

cout << "s - " << s << endl;
cout << "t - " << t << endl;


메모리에 살아 숨시는것이 중요 s, t
s : stack에 만들어진 객체 3칸짜리 객체
		8칸			free store
	s	len	11		11바이트 메모리를 자리잡아
		p			포인터를 가져와
		id	1		|	 표준  string 라는 문자열 |

t : 메모리 만드는 동작( 내가 관여할 수 없는 동작)
	t 	8			메모리를 새로 만들어서 깊은 복사를 한다.
		len	11		-> 이젠 이동이 되도록 수정해야겠죠!!!?!?
		p	
		id	2	
	클래스 STRING이 이동을 지원하나? NO
	그럼 복사 생성을 대신 한다( MOVE SEMANTIC)
	

나는 이동을 지원하는 클래스요! 하고 알려줘야겠죠

move ctor
move operaoter= 
2가지를 만들어야한다.

이동 동작
2번객체가 1번 객체가 확보한 객체를 가르키게 하고
1와 free store의 메모리의 연결을 해제한다.

이동당한 객체 
x -value? 라고 한다.


c++ lvalue categroy( cpp reference 찾아보기)
c++ value category(이미지로도 보기)
표현식  -> ex) a+b
		옛날	
	ex)	int a = 2+3;
		2+3 = a;	??
		
1. lvalue	: left value 		location value (저장소가 되어야한다.)
2. rvalue	: right value

자원을 이동당한 객체는 완료된 객체야!
exfired 된 객체야
완료된 객체 데이터를 출력하라고? 이거 미친거야!

int a;
int* p = &a;

&a; 어드레스 오브 a!

int& a;
인티져 레퍼런스 a
만약 쓴다면? 	int& a = num;

&&
 rvalude 레퍼런스


p.get()	???
p. reset() 새로 설정
p.relse   소유권을 놓는다.



p.reset(other.p.get());
아래 두니까 p.release()해도 되니? 라고 생각해보라고 

복사 생성, 복사할당연산자는 짝이 되기때문에 
둘다 똑같이 코딩할 이유가 없기에 이용해서 쓸수 있을거임



이동후에 사용하지 않기로 한 객체를 써서 즉사...
표준은 죽지 않고 돌아간다.

미친노밍 쓸수 도 있으니까
release됐을때

other.len = 0;




for (const auto& str : a)
	cout << str << endl;
왜 미친건가
가독성 ㅠㅠ
STRING을 직접 쓰는게 좋다.




include 종속성의 문제! 조심
include 정렬하지 말자


이동생성 이동연상자를 만들어서 복사 생성을 안함 sort안할때


new 이런것은 쓰지 않는 것이



표준 템플릿 라이브러리 stl
자료구조 + 알고리즘
어떤프로그램의 많이 쓴는 기능을 많이 쓴는 기능을 미리 컴파일 해둔 코드의 집합을
라이브러리라고 한다.

C언어
소스코드가 보이지 않는 기계어의 집합 : 라이브러리

c++의 라이브러리는 달라요
정의로 이동할 수 있다.

stl은 소스코드가 공개되어 있다
자료구조 + 알고리즘 (+에 대해서 알려준다)