2025-04-01 STL 5주 1일

람다를 쓸때 왜 그냥 함수를 써서 sort할때 보다 빠른지 ?

어떤것의 정체가 무엇인가?
수단이 있잖아 -> 자료형? 얘너 자료형이 뭐야
넌 크기가 몇바이트야?
넌 어디에 살고 있니?



똑같이 만들었는데 람다의 클래스가 다르네?
람다 1의 정체 - class `int __cdecl main(void)'::`2'::<lambda_1>
람다 2의 정체 - class `int __cdecl main(void)'::`2'::<lambda_2>


람다를 전역 위치로 바꾸면?
[]() {
	cout << "안녕! 난 이름이 없어." << endl;
}();
이 코드는 코드 영역에 적혀 있어야한다.


코드 세그먼트에 저장되어 있는 것을 알수 있다.
int* 저장 = (int*)save;
cout << "save 함수가 저장된 메모리 번지 - " << 저장 << endl;


번지를 저장할 수 있는 것을 함수 포인터!!! 라고 하고 이는 호출 가능하다.


vs에서는 람다를 class로 만들어


람다가 어떤 일을 하냐?
클래스의 객체인데 함수 호출 처럼 된다. 
class Dog {
public:
	void operator()() {
		cout << "나를 왜 불렀죠?" << endl;
	}
};
//--------
int main()
//--------
{
	Dog dog;

	dog();

	(*save)("메인.cpp");
} 



함수 호출 ~~
void operator()() {
		cout << "나를 왜 불렀죠?" << endl;
	}





dog.operator()(); 와 같다 	dog();


람다는
람다 - 이름없는 함수 - 실체가 있어야 한다(VS class로 코딩)




// 4. 함수 객체(function object) - 함수호출연산자를 오버로딩한 클래스 객체
아까 도그와 같이 오버로딩한 클래스 객체




람다 도입자 []
람다는 리턴문을 보고 오토 디덕션 할 수 있는 기능이 있다.
auto Dog = [](int a, int b) ->bool { return a > b; };

			->bool 은 자동으로 해주기 때문에 안해도 된다.



// 1. 함수
// 2. 함수포인터

함수 이름과 함수의 포인터는 똑같은거구나!


함수를 호출하는지 객체를 호출하는지 모호할때
Dog{}이와 같이해 객체를 호출한다고 알려줌




5. 멤버함수
다루지 않겠어요





a,b가 인자가 다르면 천지 차이

void b(int);
void(*a)();

a = (void(*)(int))(b);

서로 전혀 다른 타입



!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!!
auto p = [](int a, int b) {return a > b; };
cout << boolalpha << p(3, 4) << endl;

function<bool(int,int)> 내림차순 = p;




array<Dog, 10> dogs;
int를 넣었을때는 디폴트 생성자가 불리지 않았는데
Dog일떄 불리네?




